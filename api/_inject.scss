@use '../tokens';
@use '../src/utils';
@use './var';

////
/// @access public
/// @group api
////

/// Inject a color CSS custom property into the CSS scope.
/// @example scss
///     // Given that the following CSS custom properties are defined:
///     // --my-color-h: 0;
///     // --my-color-s: 100;
///     // --my-color-l: 50;
///     @include inject-color('my-color');
///
///     // results into
///     --my-color: hsl(var(--my-color-h) var(--my-color-s) var(--my-color-l));
/// @param {string} name
///     CSS custom property name for color
/// @requires {function} runtime
/// @requires {mixin} utils.inject
///     <../#utils-mixin-inject>
@mixin inject-color($name) {
    $-h: var.runtime($name, h);
    $-s: calc(var.runtime($name, s) * 1%);
    $-l: calc(var.runtime($name, l) * 1%);

    @include utils.inject((#{$name}: hsl($-h $-s $-l)));
}

/// Inject a color CSS custom property into the CSS scope.
/// @example scss
///     // Following:
///     @include inject-hsl('my-color', 0, 100, 50);
///
///     // results into
///     --my-color-h: 0;
///     --my-color-s: 100;
///     --my-color-l: 50;
///     --my-color: hsl(var(--my-color-h) var(--my-color-s) var(--my-color-l));
/// @param {string} name
///     CSS custom property name for color
/// @param {number} h
///     Hue. Should be between 0 and 360
/// @param {number} s
///     Saturation. Should be between 0 and 100
/// @param {number} l
///     Lightness. Should be between 0 and 100
/// @requires {mixin} inject-color
/// @requires {mixin} utils.inject
///     <../#utils-mixin-inject>
@mixin inject-hsl($name, $h, $s, $l) {
    @include utils.inject((#{$name}-h: $h, #{$name}-s: $s, #{$name}-l: $l));
    @include inject-color($name);
}

/// Inject an on-color (text color) CSS custom property into the CSS scope.
/// @example scss
///     // Given that the following CSS custom properties are defined:
///     // --my-color-h: 0;
///     // --my-color-s: 100;
///     // --my-color-l: 50;
///     @include inject-on('my-color');
///
///     // results into
///     // --on-my-color-h: 0;
///     // --on-my-color-s: 100;
///     // --on-my-color--sign: (...);
///     // --on-my-color-l: calc(...);
///     // --on-my-color: hsl(...);
/// @param {string} name
///     CSS custom property name for color
/// @param {number} shift [tokens.$on-shift]
///     Background to text lightness contrast. \
///     Should be between 0 to 50.
/// @requires {function} runtime
/// @requires {mixin} inject-color
/// @requires {mixin} utils.inject
///     <../#utils-mixin-inject>
/// @requires {function} utils.hardlimit
///     <../#utils-function-hardlimit>
/// @requires {function} utils.runtime
///     <../#utils-function-runtime>
/// @requires {variable} tokens.$on-shift
///     <../tokens/#tokens-variable-on-shift>
@mixin inject-on($name, $shift: tokens.$on-shift) {
    @include utils.inject(
        (
            on-#{$name}-h: var.runtime($name, h),
            on-#{$name}-s: var.runtime($name, s),
            // sign = +1 if l <= 100 - shift, -1 if l > 100 - shift
            on-#{$name}--sign: calc(-2 * utils.hardlimit(#{$name}-l, 100 - $shift) + 1),
            on-#{$name}-l: calc(var.runtime($name, l) + $shift * utils.runtime(on-#{$name}--sign))
        )
    );
    @include inject-color(on-#{$name});
}

/// Injects a container color CSS custom property into the CSS scope.
/// @example scss
///     // Given that the following CSS custom properties are defined:
///     // --my-color-h: 0;
///     // --my-color-s: 100;
///     // --my-color-l: 50;
///     @include inject-container('my-color');
///
///     // results into
///     // --my-color-container-h: 0;
///     // --my-color-container-s: 100;
///     // --my-color-container--sign: (...);
///     // --my-color-container-l: calc(...);
///     // --my-color-container: hsl(...);
/// @param {string} name
///     CSS custom property name for color
/// @param {number} shift [tokens.$container-shift]
///     Background to container lightness contrast. \
///     Should be between 0 to 50.
/// @requires {function} runtime
/// @requires {mixin} inject-color
/// @requires {mixin} utils.inject
///     <../#utils-mixin-inject>
/// @requires {function} utils.hardlimit
///    <../#utils-function-hardlimit>
/// @requires {function} utils.runtime
///     <../#utils-function-runtime>
/// @requires {variable} tokens.$container-shift
///     <../tokens/#tokens-variable-container-shift>
@mixin inject-container($name, $shift: tokens.$container-shift) {
    @include utils.inject(
        (
            #{$name}-container-h: var.runtime($name, h),
            #{$name}-container-s: var.runtime($name, s),
            // sign = +1 if l <= shift, -1 if l > shift
            #{$name}-container--sign: calc(-2 * utils.hardlimit(#{$name}-l, $shift) + 1),
            #{$name}-container-l: calc(var.runtime($name, l) + $shift * utils.runtime(#{$name}-container--sign))
        )
    );
    @include inject-color(#{$name}-container);
}

/// Injects following CSS custom properties into the CSS scope.
///  - color
///  - on-color
///  - container-color
///  - on-container-color
/// @example scss
///     // Given the following:
///     @include inject('my-color', 0, 100, 50);
///
///     // results into
///     // --my-color-h: 0;
///     // --my-color-s: 100;
///     // --my-color-l: 50;
///     // --my-color: hsl(...);
///     // --on-my-color-h: 0;
///     // --on-my-color-s: 100;
///     // --on-my-color--sign: (...);
///     // --on-my-color-l: calc(...);
///     // --on-my-color: hsl(...);
///     // --my-color-container-h: 0;
///     // --my-color-container-s: 100;
///     // --my-color-container--sign: (...);
///     // --my-color-container-l: calc(...);
///     // --my-color-container: hsl(...);
///     // --on-my-color-container-h: 0;
///     // --on-my-color-container-s: 100;
///     // --on-my-color-container--sign: (...);
///     // --on-my-color-container-l: calc(...);
///     // --on-my-color-container: hsl(...);
/// @param {string} name
///     CSS custom property name for color
/// @param {number} h
///     Hue. Should be between 0 and 360
/// @param {number} s
///     Saturation. Should be between 0 and 100
/// @param {number} l
///     Lightness. Should be between 0 and 100
/// @requires {mixin} inject-hsl
/// @requires {mixin} inject-on
/// @requires {mixin} inject-container
@mixin inject($name, $h, $s, $l) {
    @include inject-hsl($name, $h, $s, $l);
    @include inject-on($name);
    @include inject-container($name);
    @include inject-on(#{$name}-container);
}

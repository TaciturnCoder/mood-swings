@use './utils';
@use './tokens';
@use '../api';

////
/// @access public
/// @group wrapper
////

/// Creates a new color
/// @param {string} name
///     Name of the color
/// @param {color} color
///     Color
/// @requires {mixin} api.inject
///     <../../docs/api/#api-mixin-inject>
/// @requires {function} abstract
@mixin new($name, $color) {
    @include api.inject($name,
        utils.abstract(hue($color)),
        utils.abstract(saturation($color)),
        utils.abstract(lightness($color)));
}

/// Returns a runtime color
/// @param {string} name
///     Name of the color
/// @requires {function} api.runtime
///     <../../docs/api/#api-function-runtime>
@function runtime($name) {
    @return api.runtime($name);
}

/// Injects preset colors into the css scope
/// @param {color} accent [tokens.$accent]
///     Accent color
/// @param {color} variant [tokens.$variant]
///     Variant color
/// @param {color} mood [tokens.$mood]
///     Mood color
/// @param {color} error [tokens.$error]
///     Error color
/// @param {color} warning [tokens.$warning]
///     Warning color
/// @param {color} success [tokens.$success]
///     Success color
/// @requires {mixin} api.inject-hsl
///     <../../docs/api/#api-mixin-inject-hsl>
/// @requires {mixin} api.inject
///     <../../docs/api/#api-mixin-inject>
/// @requires {mixin} api.mood-flag
///     <../../docs/api/#api-mixin-mood-flag>
/// @requires {function} api.blend-mood
///     <../../docs/api/#api-function-blend-mood>
/// @requires {function} api.runtime
///     <../../docs/api/#api-function-runtime>
/// @requires {variable} accent
/// @requires {variable} variant
/// @requires {variable} mood
/// @requires {variable} error
/// @requires {variable} warning
/// @requires {variable} success
/// @requires {function} abstract
/// @requires {mixin} new
@mixin presets($accent: tokens.$accent,
    $variant: tokens.$variant,
    $mood: tokens.$mood,
    $error: tokens.$error,
    $warning: tokens.$warning,
    $success: tokens.$success) {
    @include api.inject-hsl(accent,
        utils.abstract(hue($accent)),
        utils.abstract(saturation($accent)),
        utils.abstract(lightness($accent)));
    @include api.inject-hsl(variant,
        utils.abstract(hue($variant)),
        utils.abstract(saturation($variant)),
        utils.abstract(lightness($variant)));
    @include api.inject-hsl(mood,
        utils.abstract(hue($mood)),
        utils.abstract(saturation($mood)),
        utils.abstract(lightness($mood)));
    @include api.mood-flag;

    @include new(error, $error);
    @include new(warning, $warning);
    @include new(success, $success);

    @include api.inject(primary,
        api.blend-mood(accent, h),
        api.blend-mood(accent, s),
        api.blend-mood(accent, l));

    @include api.inject(secondary,
        api.blend-mood(variant, h, tokens.$secondary-blend-ratio),
        api.runtime(variant, s),
        api.blend-mood(variant, l, tokens.$secondary-blend-ratio));

    @include api.inject(surface,
        api.runtime(primary, h),
        10,
        api.runtime(primary, l));
}
